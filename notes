/*Check vowel or consonant*/
#include <stdlib.h>	
#include <stdio.h>
#include <ctype.h>
int main(void)
{
	char C;
	int isLowerCaseVowel, isUpperCaseVowel, runcounter = 0;

	do 
	{
		printf("Enter a letter: \n");
		C = getchar();
		if (runcounter > 0)
		{
			if (!isalpha(C))
				printf("Enter a letter: \n");
		}
		++runcounter;
	} while (!isalpha(C));

	isLowerCaseVowel = (C == 'a' || C == 'e' || C == 'i' || C == 'o' || C == 'u');

	isUpperCaseVowel = (C == 'A' || C == 'E' || C == 'I' || C == 'O' || C == 'U');


	if (isLowerCaseVowel || isUpperCaseVowel)
	{
		printf("%c is a vowel.\n", C);
	}
	else
		printf("%c is a consonant.\n", C);

	system("pause");
	return 0;
}

/*Check vowel or consonant*/
#include <stdlib.h>	
#include <stdio.h>
#include <ctype.h>

int checkPrimeNumber();

int main(void) 
{
	int x;

	x = checkPrimeNumber();
	printf("%d\n", x);
	system("pause");
	}

int checkPrimeNumber()
{
	int num, i, flag = 0;
	printf("Enter a positive integer: \n");
	scanf_s("%d", &num);

	for (i = 2; i <= num; i++)
	{
		if (num%i == 0)
		{
			flag = 1;
		}
	}
	if (flag == 1)
		printf("%d is not a prime number. \n", num);
	else
		printf("%d is a prime number. \n", num);
	
	return num;
	
}


//TicTacToe
#include <stdlib.h>
#include <stdio.h>

/*****************************************
Function PrototOpe
*****************************************/

void displayBoard();
int verifySelection(int, int);
void checkForWinner();

//Global Variables
char board[9];
char cWhoWon = ' ';
int iCurrentPlayer = 0;

int main(void)
{
	int x;
	int iSquareNum = 0;

	for (x = 0; x < 9; x++) {
		board[x] = ' ';
	}
	displayBoard();

	while (cWhoWon == ' ')
	{
		printf("\n%c\n", cWhoWon);
		if (iCurrentPlayer == 1 || iCurrentPlayer == 0)
		{
			printf("\nPlayer X\n");
			printf("Enter an available square number (1-9): ");
			scanf_s("%d", &iSquareNum);
			if (verifySelection(iSquareNum, iCurrentPlayer) == 1)
			{
				iCurrentPlayer = 2;
			}
			else
			{
				iCurrentPlayer = 1;
			}
		}
		displayBoard();
		checkForWinner();

	}
	system("pause");
	return 0;	//Begin Function Definition
}
	void displayBoard()
	{
		printf("\n\t|\t|\n");
		printf("\t|\t|\n");
		printf("%c\t|%c\t|%c\n", board[0], board[1], board[2]);
		printf("--------|-------|--------\n");
		printf("\t|\t|\n");
		printf("%c\t|%c\t|%c\n", board[3], board[4], board[5]);
		printf("--------|-------|--------\n");
		printf("\t|\t|\n");
		printf("%c\t|%c\t|%c\n", board[6], board[7], board[8]);
		printf("\t|\t|\n");
	}//end function definition

	//begin function definition
	int verifySelection(int iSquare, int iCurrentPlayer)
	{
		if (board[iSquare - 1] == ' ' && (iCurrentPlayer == 1 || iCurrentPlayer == 0))
		{
			board[iSquare - 1] = 'X';
			return 0;
		}
		else if (board[iSquare - 1] == ' ' && iCurrentPlayer == 2)
		{
			board[iSquare - 1] = 'O';
			return 0;
		}
		else
			return 1;
	}//end function definition
//begin function definition
void checkForWinner()
{
	int catTotal = 0;
	int x = 0;

	if (board[0] == 'X' && board[1] == 'X' && board[2] == 'X')
	{
		cWhoWon = 'X';
	}
	else if (board[3] == 'X' && board[4] == 'X' && board[5] == 'X')
	{
		cWhoWon = 'X';
	}
	else if (board[6] == 'X' && board[7] == 'X' && board[8] == 'X')
	{
		cWhoWon = 'X';
	}
	else if (board[0] == 'X' && board[3] == 'X' && board[6] == 'X')
	{
		cWhoWon = 'X';
	}
	else if (board[1] == 'X' && board[4] == 'X' && board[7] == 'X')
	{
		cWhoWon = 'X';
	}
	else if (board[2] == 'X' && board[5] == 'X' && board[8] == 'X')
	{
		cWhoWon = 'X';
	}
	else if (board[0] == 'X' && board[4] == 'X' && board[8] == 'X')
	{
		cWhoWon = 'X';
	}
	else if (board[2] == 'X' && board[4] == 'X' && board[6] == 'X')
	{
		cWhoWon = 'X';
	}

	else if (board[0] == 'O' && board[1] == 'O' && board[2] == 'O')
	{
		cWhoWon = 'O';
	}
	else if (board[3] == 'O' && board[4] == 'O' && board[5] == 'O')
	{
		cWhoWon = 'O';
	}
	else if (board[6] == 'O' && board[7] == 'O' && board[8] == 'O')
	{
		cWhoWon = 'O';
	}
	else if (board[0] == 'O' && board[3] == 'O' && board[6] == 'O')
	{
		cWhoWon = 'O';
	}
	else if (board[1] == 'O' && board[4] == 'O' && board[7] == 'O')
	{
		cWhoWon = 'O';
	}
	else if (board[2] == 'O' && board[5] == 'O' && board[8] == 'O')
	{
		cWhoWon = 'O';
	}
	else if (board[0] == 'O' && board[4] == 'O' && board[8] == 'O')
	{
		cWhoWon = 'O';
	}
	else if (board[2] == 'O' && board[4] == 'O' && board[6] == 'O')
	{
		cWhoWon = 'O';
	}

	if (cWhoWon == 'X')
	{
		printf("\nX wins!");
	}
	if (cWhoWon == 'O')
	{
		printf("\nO wins!");
	}
	//check for CAT /draw game
	for (x = 0; x < 9; x++)
	{
		if (board[x] != ' ')
			catTotal += 1;
	}// end for loop
	if (catTotal == 9)
	{
		cWhoWon = 'C';
		printf("\nCAT Game!\n");
		return;
	}//end if
}

#include <stdlib.h>
#include <stdio.h>
#define pause system("pause");

int main(void)
{
	int top = 0, bottom = 0, middle = 0, search = 0, location = 0;
	int myArray[11] = { 1, 4, 6, 8, 90, 100, 333, 444, 555, 999, 1000 };
	int count = 11;
	char stop = 'N';

	printf("There are our values: 1, 4, 6, 8, 90, 100, 333, 444, 555, 999, 1000\n");
	printf("Enter a value to find:\n");
	scanf_s("%d", &search);
	bottom = count - 1;
	middle = (top + bottom) / 2;

	while (top <= bottom && stop == 'N')
	{
		if (myArray[middle] < search) 
		{
			
			top = middle + 1;
			middle = (top + bottom) / 2;
		}
		else if (myArray[middle] == search)
		{
			location = middle + 1;
			stop = 'Y';
		}
		else
		{
			bottom = middle - 1;
			middle = (top + bottom) / 2;
		}
	}
	if (top > bottom)
	{
		printf("Not found! %i is not present in the list.\n", search);
	}
	else
	{
		printf("Value %i is element %i index number %i.\n", search, location, middle);
	}
	pause;
	return 0;
}
